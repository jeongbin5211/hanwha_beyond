Github
	프로젝트 관리

개발도구로 Git 사용해보기

DB
	개념, SQL, 서버 다중화(레플리케이션, 클러스터링, 샤딩)


git_practice_2 레포 만들기

리눅스에서의 >> 설명
리눅스에서 <, >, | 3가지 특수문자가 있음

OS가 출력할 때 
	정상 출력은 1로 매핑을 해뒀고
	에러 출력은 2로 매핑을 해둠

위 특수문자는 화면으로 출력시키는게 아니라 다른곳으로 보내라는뜻

cat README.md | ~~ 왼쪽의 출력결과를 오른쪽으로 출력


head -3 file.txt : 파일에서 첫 세줄만 출력

tail -3 file.txt : 마지막 세줄만 출력

head -5 file.txt | tail -1 : 5번째 줄만 출력

쉘 : 명령어를 입력할 수 있게 해주는 프로그램
-> 윈도우의 대표적인 쉘은 탐색기

------------------------
vscode 설치 - 기본값으로 설치

vscode로 git_practice_2 오픈
깃 아이콘으로 커밋해보기

우리 반에서의 커밋메세지 규칙
1) 커밋 템플릿
	기본적인 커밋 메세지 구조는 제목,내용,꼬리말 세가지 팡트로 나누고, 각 파트는 빈줄을 두어 구분한다.
	꼬리말은 있어도 되고 없어도 됨

[제목타입] 제목 (#이슈번호)

내용

꼬리말 타입 : #이슈 번호

2) 제목 타입
# Feat: 기능(새로운 기능)
# Refactor : 리펙토링
# Design : CSS등 사용자 UI 디자인 변경
# Comment : 필요한 주석 추가 및 변경
# Style : 스타일 (코드 형식, 세미콜론 추가 : 비즈니스 로직에 변경 없음)
# Docs : 문서 수정 ((문서 추가, 수정, 삭제, README)
# Test : 테스트 (테스트 코드 추가, 수정, assets, 패키지 매니저 등)
# Chore : 기타 변경사항 (빌드 스크립트 수정, assets, 패키지 매니저 등)
# Init : 초기 생성
# Rename : 파일 혹은 폴더명을 수정하거나 옮기는 작업만 한 경우
# 

깃허브 Projects 생성 - Kanban으로 생성

Backlog : 회의
Ready : 준비중 - 잘 안씀
In progress : 작업중
In review : 풀리퀘중 - 잘 안씀
Done : 진행 완료

다시 git_practice_2로 가서 Issues로 가보자
Add a title - 요구사항 정의서에서 요구사항ID - USER_001 회원가입 
Write - 이슈 내용
Project - project select
Milestrone - 일정 관리

요구사항 이슈를 등록하는것

[Feat] 첫 기능 개발 (#1)

무슨 기능을 어떻게, 왜, 개발했어요

Close : #1

이렇게 커밋하면 프로젝트에서 다음 단계로 자동으로 드래그&드랍

vscode 커밋 그래프에서 우클릭하면 branch 생성 가능

브랜치 규칙

main : 실제 운영중인 프로젝트의 브랜치
develop : 새로운 기능을 개발하는 프로젝트의 브랜치
feature : 새로운 기능을 개발하기 위해 개발자가 사용하는 브랜치

feature/기능

기능 작성 규칙 : 영어 소문자, 특수문자X, 띄어쓰기 대신_, 25자 이하

브랜치로 작업후 해당 브랜치 그래로 push

병합은 github에서 하기


DB

DB 서버 : DB 서비스를 제공하는 프로그램

DB : 파일, 일반적인 파일과 다르게 데이터를 효율적으로 저장하는 파일

DB의 특징 

- 자료 추상 : 복잡한 자료 쉽게 사용, 개념화, 사물의 공통 성질 추출
- 자료 독립 : 자료와 프로그램의 독립성 유지
- 자기 정의 : 자료의 구성과 내용을 DB 자신이 저장 및 관리

DB의 장점은 보통 자료 독립 특징에서 나옴

데이터의 논리적 독립성 : 논리적 구조가 변경되어도 DB를 이용하는 프로그램에는 영향x
물리적 독립성 : 저장 장치의 구조를 변경해도 DB를 이용하는 프로그램 및 개념스키마에는 영향x
무결성 유지 : 데이터를 사용할 때 다양한 제약조건으로 데이터에 결점이 생기지 않도록 유지
데이터 중복성 최소화 : 데이터를 통합하여 구성함으로 중복을 미리 통제
데이터 불일치 제거 : 중복을 최소화하여 불일치를 제거

DBMS - Database Management System
정의 기능 : 데이터의 형태, 구조, 데이터를 저장하는 것에 관한 내용 정의 - DDL
조작 기능 : 사용자의 요구에 따라 데이터의 검색, 갱신, 삽입, 삭제를 지원 - DML
제어 기능 : 데이터의 정확성과 안정성을 유지하는 기능 - DCL

데이터 모델링 : 현실 세상의 무언가를 컴퓨터 세상에 저장

객체 : 현실 세상의 무언가를 컴퓨터 세상에 코드로 만드는 것

ORM(Object Relation Mapping) : JPA

ERD 만들기
워크벤치 또는 erd 클라우드

강의 사이트를 erd로 그려보기

표그림 하나가 엔티티 하나

강의 사이트
	
	회원(이름, 이메일, PW, )

	코스(이름, 상세 내용, 세일 가격, 난이도)
		섹션
			강의

노란 열쇠 : 기본키
빨간 열쇠 : 참조키

정규화

이상(Anomaly)

제1정규화 : 하나의 컬럼에 두개이상 속성이 있으면 안됨
제2정규화 : 부분 함수 종속 제거 - 두개의 컬럼이 하나를 결정하는데 그 두개중 하나가 결정할수있을때
제3정규화 : 이행 함수 종속 제거

DB실습

나는 어떤 서비스를 만들고 싶다.
	구인사이트
요구사항
	회원이 다른 회원들을 모집한다.
	회원이 모집게시글을 작성한다.
	다른 회원들이 댓글을 단다.
	
ERD
	회원(회원id, email, PW)
	팀(팀id, 팀명, 팀원id)
	게시판(게시판id, 작성한 회원id, 제목, 내용)
	댓글(댓글id, 게시판id, 작성한 회원id, 내용)


	관계
		회원 N:1 팀
		회원 1:N 게시판
		게시판 1:N 댓글


